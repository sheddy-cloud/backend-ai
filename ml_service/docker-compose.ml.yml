version: '3.8'
services:

  backend:
    build: .
    container_name: ai_safari_backend
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ai_safari_db
      DB_USER: postgres
      DB_PASSWORD: password123
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Python ML Service (Phase 2)
  ml_service:
    build: .
    container_name: ai_safari_ml_service
    environment:
      ML_SERVICE_PORT: 8000
      ML_SERVICE_HOST: 0.0.0.0
      OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY:-your_api_key_here}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ai_safari_db
      DB_USER: postgres
      DB_PASSWORD: password123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD:
      MODEL_UPDATE_INTERVAL: 3600
      MODEL_TRAINING_ENABLED: true
      MODEL_CACHE_TTL: 7200
      LOG_LEVEL: INFO
      PREDICTION_TIMEOUT: 30
      WEATHER_CACHE_TTL: 1800
      SYNC_INTERVAL: 7200
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./ml_service:/app
      - ./ml_service/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ai_safari_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - ml_service
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: ai_safari_network
    driver: bridge
