version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: napasa_postgres
    environment:
      POSTGRES_DB: napasa_db
      POSTGRES_USER: shedrack
      POSTGRES_PASSWORD: shedrack2025
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - napasa_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: napasa_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - napasa_network
    restart: unless-stopped

  # Backend API
  backend:
    build: .
    container_name: napasa_backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: napasa_db
      DB_USER: shedrack
      DB_PASSWORD: shedrack2025
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: shedrack2025
      JWT_EXPIRE: 7d
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - napasa_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: napasa_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - napasa_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  napasa_network:
    driver: bridge
