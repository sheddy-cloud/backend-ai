version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: napasa_ai_postgres
    environment:
      POSTGRES_DB: ai_safari_db
      POSTGRES_USER: napasa_user
      POSTGRES_PASSWORD: napasa_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database:/docker-entrypoint-initdb.d
    networks:
      - napasa_ai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U napasa_user -d ai_safari_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: napasa_ai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - napasa_ai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AI Safari Backend
  ai-backend:
    build: .
    container_name: napasa_ai_backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ai_safari_db
      - DB_USER=napasa_user
      - DB_PASSWORD=napasa_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ML_SERVICE_URL=http://ml-service:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - napasa_ai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ML Service
  ml-service:
    build: ./ml_service
    container_name: napasa_ml_service
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - ENVIRONMENT=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ai_safari_db
      - DB_USER=napasa_user
      - DB_PASSWORD=napasa_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./ml_service/models:/app/models
      - ./ml_service/logs:/app/logs
    networks:
      - napasa_ai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  napasa_ai_network:
    driver: bridge







